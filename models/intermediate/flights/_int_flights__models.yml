models:
  - name: fct_bookings                                    # Имя модели, которой задаем свойства
    description: Факты бронирований                       # Описание модели
    config:
      contract: {enforced: true}                          # Включаем контракт (нужен для работы ограничений)
      docs:                                               # Свойства отображения в документации
        show: true                                        # Нужно ли отображать там модель
        node_color: red                                   # Цвет модели в документации
      meta:                                               # Тут можно добавлять любые пары ключ-значение, какие хотим для описания модели (можно и для колонок)
        owner: avsh888@ya.ru
        owner_name: Alexander
      
      #access: private | protected | public               # Настройка доступа к модели                            
    latest_version: 1                                     # Управление версиями. Можно создавать разные версии и пользователи могут указать явно к какой версии модель подключаться
    versions:
      - v: 1


    #deprecation_date: <YAML_DateTime>                    # Дата, когда устареет модель
    #constraints:                                         # Ограничения (проверка, которая не даст оновить модель, если не будет выполнена)
    # - <constraint>
    # - ...
    #data_tests:                                          # Тесты - модель обновится, но выдаст предупреждение 
    # - <test>
    # - ...
    columns:                                              # Перечисляем колонки (так же необходимы для контракта)
      - name: book_ref
        description: Описание колонки
        data_type: bpchar(6)
        constraints:                                      # Задаем ограничения для этой колонки (Ограничения могут быть и на уровне модели)
          - type: not_null
      - name: book_date
        data_type: timestamptz
      - name: total_amount
        data_type: numeric(10, 2)
        constraints:                                      # ограничение по выражению
          - type: check
            expression: "total_amount > 0"
        data_tests:                                       # можем добавить тест на колонку (в случае ошибки просто выдаст алерт и данные все-равно будут загружены)
          - not_null                                      # команда dbt run тесты не прогоняет
        quote: true                                       # нужно ли при генерации sql запроса обрамлять имя поля в ковычки

    